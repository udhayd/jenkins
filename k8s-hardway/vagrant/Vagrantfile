# -*- mode: ruby -*-
# vi: set ft=ruby :

# Internal network prefix for the VM network
IP_NW = "192.168.56."

# Host address start points
NODE_IP_START = 10

# All Vagrant configuration is done below. The "2" in Vagrant.configure
Vagrant.configure("2") do |config|

  ### Vagrant Box Image Name for VM
  config.vm.box = "centos/7"

  ### Provision master Nodes
  config.vm.define "master" do |node|

    node.vm.provider "virtualbox" do |vb|
      vb.name = "master"
      vb.memory = 1200
      vb.cpus = 1
    end

    node.vm.hostname = "master"

    node.vm.network :private_network, ip: "192.168.56.4"

    node.vm.provision "shell", inline: <<-SHELL
      mkdir /root/.ssh;test -f /vagrant/ssh/id_rsa && { mv /vagrant/ssh/id_rsa* /root/.ssh/;mv /vagrant/cluster* /root/;mv /vagrant/*.yaml /root/;sed -i -e 's/\r$//' /root/cluster*;chmod 755 /root/cluster*; }
      test -f /root/.ssh/id_rsa.pub && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys;chown -R root:root /root/.ssh;chmod -R 700 /root/.ssh
    SHELL
  end

  ### Provision worker Nodes
  (1..2).each do |i|

    config.vm.define "worker#{i}" do |node|

      node.vm.provider "virtualbox" do |vb|
        vb.name = "worker#{i}"
        vb.memory = 1500
        vb.cpus = 1
      end

      node.vm.hostname = "worker#{i}"

      node.vm.network :private_network, ip: IP_NW + "#{NODE_IP_START + i}"

      node.vm.provision "shell", inline: <<-SHELL
      mkdir /root/.ssh;chmod 700 /root/.ssh && { mv /vagrant/ssh/id_rsa.pub /root/.ssh/authorized_keys;mv /vagrant/cluster* /root/;chown -R root:root /root/.ssh; }
    SHELL

    end
  end

  ### Add Network Adapater for all VMs
  config.vm.network "public_network", bridge: [
      "en1: Realtek USB GbE Family Controller",
      "en6: Intel(R) Wi-Fi 6E AX211 160MHz",
    ]

  ##config.vm.synced_folder ".", "/vagrant", disabled: true

  ### Provisoner shell command Execution
  config.vm.provision "shell", inline: <<-SHELL
    yum install -y net-tools ksh wget
    cat /vagrant/bash_profile >>/root/.bash_profile
    getenforce|grep Enforcing && setenforce Permissive
    sed -i -E "s/SELINUX=[^ ]*/SELINUX=disabled/g" /etc/selinux/config
    sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    systemctl stop sshd && systemctl start sshd
    echo "root123" | passwd root --stdin
    echo "
    ## K8s Nodes
    192.168.56.4   master
    192.168.56.11  worker1
    192.168.56.12  worker2" >>/etc/hosts
    echo '
    set -o vi
    PS1=$(hostname):'$PWD# '
    export PS1
    alias k="kubectl get all"
    alias kc=kubectl
    alias c=clear
    ssh-exec ()
    {
    for i in worker1 worker2 master;do  echo;echo "***************$i******************";ssh -o StrictHostKeyChecking=no $i $@;echo "****************************************";done
    }' >>/root/.bash_profile
  SHELL
end
